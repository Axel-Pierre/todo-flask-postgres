---
- name: Install Postgresql for AWX
  hosts: all, !local
  tasks:
    - name: Start postgresql latest version
      docker_container:
        name: 'db'
        image: systemdevformations/docker-postgres12
        state: 'started'
        env:
          POSTGRES_PASSWORD: 'password' # Beware: in some version of postgres official release is POSTGRESQL_PASSWORD
        ports:
          - "5432:5432"
        volumes:
          - "/opt/postgres:/var/lib/postgresql/data"
          #- "./sql:/tmp"
      register: db_cont_metadata
    - name: Get infos on container
      docker_container_info:
        name: 'db'
      register: result
    - name: Does container exist?
      debug:
        msg: "The container {{ 'exist' if result.exists else 'does not exist' }}"
    - name: IP address
      debug:
        msg: "{{result.container.NetworkSettings.IPAddress}}"
    - name: wait for postgres to accept connections
      wait_for:
        host: "{{ result.container.NetworkSettings.IPAddress }}"
        port: 5432
        state: 'drained' # will check for active connection
        connect_timeout: 1
        timeout: 30  # maximum number of seconds to wait for
      register: postgresql_running
      until: postgresql_running is success
      retries: 10
    - name: Add container db to in-memory inventory
      add_host:
        delegate_to: {{ ansible_ssh_host }}
        name: db
        ansible_connection: docker
      changed_when: false
    - name: run command in container db
      delegate_to: db
      remote_user: postgres
      raw: psql -l | grep tododb | wc -l
      register: result
    - name: Return value
      debug:
        msg: "{{ result.stdout | trim }}"
    - name: Create database
      delegate_to: db
      remote_user: postgres
      raw: psql -c 'create database tododb;'
      when: result.stdout | trim | int == 0